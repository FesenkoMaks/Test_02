{"version":3,"sources":["App.module.scss","components/Tasks.module.scss","components/AddNewTask.module.scss","components/TodoList.module.scss","state.js","components/AddNewTask.js","components/Tasks.js","components/TodoList.js","store/todolistReducer.js","App.js","store/store.js","reportWebVitals.js","index.js"],"names":["module","exports","initialState","id","order","title","isDone","getState","Promise","res","rej","AddNewTask","props","className","style","new","value","onChange","changeInputValue","onClick","addNewTask","Tasks","task","tasks","map","item","type","checked","changeTaskStatus","removeTask","TodoList","useSelector","state","todolist","dispatch","useDispatch","useState","setValue","todo","event","target","a","trim","taskId","changeTaskStatusAC","App","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","filter","v1","length","localStorage","JSON","parse","store","createStore","subscribe","stringify","ReactDOM","render","StrictMode","document","getElementById","setItem"],"mappings":"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","file":"static/js/main.ce6f8fdf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__4LEK_\",\"title\":\"App_title__MjX1s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Tasks_task__1DVY6\",\"item\":\"Tasks_item__2XX7x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new\":\"AddNewTask_new__3RqOh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"TodoList_todo__3lZFf\"};","export const initialState = [\r\n  { id: \"111111\", order: 1, title: \"HTML\", isDone: false },\r\n  { id: \"222222\", order: 2, title: \"CSS\", isDone: true },\r\n  { id: \"333333\", order: 3, title: \"Rect\", isDone: false },\r\n];\r\n\r\nexport const getState = new Promise((res, rej) => {\r\n  res(initialState);\r\n});\r\n","import React from \"react\";\r\nimport style from \"./AddNewTask.module.scss\";\r\n\r\nconst AddNewTask = (props) => {\r\n  return (\r\n    <div className={style.new}>\r\n      <input value={props.value} onChange={props.changeInputValue}></input>\r\n      <button onClick={props.addNewTask}>+</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewTask;\r\n","import React, { useState } from \"react\";\r\nimport style from \"./Tasks.module.scss\";\r\n\r\nconst Tasks = (props) => {\r\n  return (\r\n    <div className={style.task}>\r\n      {props.tasks.map((task) => (\r\n        <div className={style.item} key={task.id}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={task.isDone}\r\n            onChange={() => props.changeTaskStatus(task.id, task.isDone)}\r\n          ></input>\r\n          {task.title}\r\n          <button onClick={() => props.removeTask(task.id)}>X</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  addTaskAC,\r\n  removeTaskAC,\r\n  changeTaskStatusAC,\r\n} from \"../store/todolistReducer\";\r\nimport AddNewTask from \"./AddNewTask\";\r\nimport Tasks from \"./Tasks\";\r\nimport style from \"./TodoList.module.scss\";\r\n\r\nconst TodoList = () => {\r\n  const tasks = useSelector((state) => state.todolist);\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const changeInputValue = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const changeTaskStatus = (id, isDone) => {\r\n    dispatch(changeTaskStatusAC(id, !isDone));\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    dispatch(removeTaskAC(id));\r\n  };\r\n\r\n  const addNewTask = () => {\r\n    let a = value.trim();\r\n    if (a) {\r\n      dispatch(addTaskAC(a));\r\n    }\r\n\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={style.todo}>\r\n      <AddNewTask\r\n        value={value}\r\n        changeInputValue={changeInputValue}\r\n        addNewTask={addNewTask}\r\n      />\r\n      <Tasks\r\n        tasks={tasks}\r\n        removeTask={removeTask}\r\n        changeTaskStatus={changeTaskStatus}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { v1 } from \"uuid\";\r\nimport { initialState } from \"../state\";\r\n\r\nexport const todolistReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"REMOVE-TASK\": {\r\n      return [...state.filter((task) => task.id !== action.taskId)];\r\n    }\r\n    case \"ADD-TASK\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: v1(),\r\n          order: state.length > 0 ? state[state.length - 1].order + 1 : 1,\r\n          title: action.title,\r\n          isDone: false,\r\n        },\r\n      ];\r\n    case \"CHANGE-TASK-STATUS\":\r\n      return [\r\n        ...state.map((task) =>\r\n          task.id === action.taskId ? { ...task, isDone: action.isDone } : task\r\n        ),\r\n      ];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const removeTaskAC = (taskId) => {\r\n  return { type: \"REMOVE-TASK\", taskId };\r\n};\r\nexport const addTaskAC = (title) => {\r\n  return { type: \"ADD-TASK\", title };\r\n};\r\nexport const changeTaskStatusAC = (taskId, isDone) => {\r\n  return { type: \"CHANGE-TASK-STATUS\", taskId, isDone };\r\n};\r\n","import style from \"./App.module.scss\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className={style.app}>\n      <div className={style.title}>\n        <h1>\n          Todo<span>List</span>\n        </h1>\n      </div>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers, createStore } from \"redux\";\r\nimport { getState } from \"../state\";\r\nimport { todolistReducer } from \"./todolistReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  todolist: todolistReducer,\r\n});\r\n\r\nlet initialState;\r\ngetState.then((state) => (initialState = state));\r\n\r\nconst state = localStorage[\"reduxState\"]\r\n  ? JSON.parse(localStorage[\"reduxState\"])\r\n  : initialState;\r\n\r\nexport const store = createStore(rootReducer, state);\r\n\r\nstore.subscribe(() => {\r\n  localStorage[\"reduxState\"] = JSON.stringify(store.getState());\r\n});\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\n// const persistedState =\n//   localStorage.getItem(\"reduxState\").length > 0\n//     ? JSON.parse(localStorage.getItem(\"reduxState\"))\n//     : store;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nstore.subscribe(() => {\n  localStorage.setItem(\"reduxState\", JSON.stringify(store.getState()));\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}